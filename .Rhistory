gt() %>%
tab_header(
title = "Average statistical power"
) %>%
fmt_number(
columns = 2:7,
decimals = 2
) %>% gtsave("figures_tables/McCormick_Table_2.rtf")
ggsave(filename = "figures_tables/McCormick_Figure_1.pdf",
plot = fig_1,
dpi = 800,
height = 10,
width = 7.5,
units = "in")
getwd()
a <- u_n_e %>%
filter(duplicates != "0% duplicates") %>%
select(O:RMS) %>%
summarise(across(everything(.), ~mean(.x))) %>%
mutate(Decimals = "All") %>%
select(Decimals, O:RMS)
b <- u_n_e %>%
filter(duplicates != "0% duplicates",
decimals == "1 decimal") %>%
select(O:RMS) %>%
summarise(across(everything(.), ~mean(.x))) %>%
mutate(Decimals = "One") %>%
select(Decimals, O:RMS)
c <- u_n_e %>%
filter(duplicates != "0% duplicates",
decimals == "2 decimals") %>%
select(O:RMS) %>%
summarise(across(everything(.), ~mean(.x))) %>%
mutate(Decimals = "Two") %>%
select(Decimals, O:RMS)
table_2 <- bind_rows(a, b, c) %>%
gt() %>%
tab_header(
title = "Average statistical power"
) %>%
fmt_number(
columns = 2:7,
decimals = 2)
gtsave(table_2, "figures_tables/McCormick_Table_2.rtf")
Rows <- c(1, 2, "Total")
Zero <- c(0, 1, 1)
One <- c(2, 1, 3)
Two <- c(1, 0, 1)
Three <- c(2, 0, 2)
Four <- c(0, 1, 1)
Total <- c(5, 3, 8)
table_1 <- data.frame(Rows, Zero, One, Two, Three, Four, Total) %>%
gt() %>%
tab_header(
title = "Contingecy table for toy data set"
) %>%
tab_spanner(label = "Terminal Digit",
columns = c(Zero:Four)) %>%
cols_label(
Rows = "Preceding Digits",
Zero = "0",
One = "1",
Two = "2",
Three = "3",
Four = "4")
gtsave(table_1, "figures_tables/McCormick_Table_1.rtf")
exponential_all <- readRDS("indtermdigit/paper/data/e_all.RDS") %>%
rename(n = number,
O = d_perm_p,
AF = d_av_fre_p,
X2 = d_chi_p,
G2 = d_g2_p,
FT = d_ft_p,
RMS = d_rms_p) %>%
mutate(distribution = "exponential",
parameter = ifelse(parameter == 1, "Exp(1)",
ifelse(parameter == 0.5, "Exp(0.5)", "Exp(0.25)")),
parameter = factor(parameter, levels = c("Exp(1)", "Exp(0.5)", "Exp(0.25)")),
duplicates = duplicates / n)
setwd("intermedigit/paper")
setwd("~intermedigit/paper")
setwd("~/intermedigit/paper")
setwd("indtermdigit/paper")
setwd("~/indtermdigit/paper")
getwd()
bind_rows(a, b, c) %>%
gt() %>%
tab_header(
title = "Average statistical power"
) %>%
fmt_number(
columns = 2:7,
decimals = 2
) %>% gtsave("indtermdigit/paper/figures_tables/McCormick_Table_2.rtf")
bind_rows(a, b, c) %>%
gt() %>%
tab_header(
title = "Average statistical power"
) %>%
fmt_number(
columns = 2:7,
decimals = 2
) %>% gtsave("indtermdigit/paper/figures_tables/McCormick_Table_2.rtf")
bind_rows(a, b, c) %>%
gt() %>%
tab_header(
title = "Average statistical power"
) %>%
fmt_number(
columns = 2:7,
decimals = 2
) %>% gtsave("paper/figures_tables/McCormick_Table_2.rtf")
ggsave(filename = "paper/figures_tables/McCormick_Figure_4.pdf",
plot = fig_4,
dpi = 800,
height = 10,
width = 7.5,
units = "in")
ggsave(filename = "paper/figures_tables/McCormick_Figure_3.pdf",
plot = fig_3,
dpi = 800,
height = 10,
width = 7.5,
units = "in")
uniform_all <- readRDS("indtermdigit/paper/data/u_all.RDS") %>%
rename(n = number,
O = d_perm_p,
AF = d_av_fre_p,
X2 = d_chi_p,
G2 = d_g2_p,
FT = d_ft_p,
RMS = d_rms_p) %>%
mutate(parameter = ifelse(parameter == 5, "U(0, 5)",
ifelse(parameter == 10, "U(0, 10)", "U(0, 20)")),
parameter = factor(parameter, levels = c("U(0, 5)", "U(0, 10)", "U(0, 20)")))
#Graphs and tables
#This scrip creates and saves figures 1 - 4 which are
#based on three sets of results for Monte Carlo simulations.
#It also creates tables 1 and 2.
#Setup####
knitr::opts_chunk$set(echo = FALSE)
options(dplyr.summarise.inform = FALSE)
devtools::load_all()
library(tidyverse)
library(gt)
exponential_all <- readRDS("paper/data/e_all.RDS") %>%
rename(n = number,
O = d_perm_p,
AF = d_av_fre_p,
X2 = d_chi_p,
G2 = d_g2_p,
FT = d_ft_p,
RMS = d_rms_p) %>%
mutate(distribution = "exponential",
parameter = ifelse(parameter == 1, "Exp(1)",
ifelse(parameter == 0.5, "Exp(0.5)", "Exp(0.25)")),
parameter = factor(parameter, levels = c("Exp(1)", "Exp(0.5)", "Exp(0.25)")),
duplicates = duplicates / n)
uniform_all <- readRDS("paper/data/u_all.RDS") %>%
rename(n = number,
O = d_perm_p,
AF = d_av_fre_p,
X2 = d_chi_p,
G2 = d_g2_p,
FT = d_ft_p,
RMS = d_rms_p) %>%
mutate(parameter = ifelse(parameter == 5, "U(0, 5)",
ifelse(parameter == 10, "U(0, 10)", "U(0, 20)")),
parameter = factor(parameter, levels = c("U(0, 5)", "U(0, 10)", "U(0, 20)")))
normal_all <- readRDS("paper/data/n_all.RDS") %>%
rename(n = number,
O = d_perm_p,
AF = d_av_fre_p,
X2 = d_chi_p,
G2 = d_g2_p,
FT = d_ft_p,
RMS = d_rms_p) %>%
mutate(parameter = ifelse(parameter == 1, "SD(1)",
ifelse(parameter == 2, "SD(2)", "SD(5)")),
parameter = factor(parameter, levels = c("SD(1)", "SD(2)", "SD(5)")))
u_n_e <- bind_rows(normal_all, uniform_all, exponential_all) %>%
mutate(duplicates = paste(duplicates * 100, "% duplicates", sep = ""),
duplicates = factor(duplicates, levels = c("0% duplicates", "5% duplicates", "10% duplicates", "20% duplicates")),
decimals = ifelse(decimals == 1, "1 decimal", "2 decimals"))
#Figure 1####
fig_1 <- u_n_e %>%
filter(duplicates == "0% duplicates") %>%
select(n, parameter, duplicates, distribution, decimals, O:RMS) %>%
pivot_longer(cols = -c(n, parameter, duplicates, decimals, distribution)) %>%
ggplot(aes(n, value, color = name)) +
geom_point(aes(shape = name)) +
geom_line() +
geom_hline(yintercept = 0.05,
linetype = 2) +
xlab(NULL) +
ylab(NULL) +
ggtitle("Type I errors") +
theme_minimal() +
facet_wrap(~distribution + decimals + parameter,
nrow = 3) +
theme(strip.text.x = element_text(margin = margin(2, 0, 2, 0)),
plot.title = element_text(hjust = 0.5),
legend.position = "bottom",
legend.title = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_blank()
)
fig_1
ggsave(filename = "paper/figures_tables/McCormick_Figure_1.pdf",
plot = fig_1,
dpi = 800,
height = 10,
width = 7.5,
units = "in")
#Figure 2####
fig_2 <- u_n_e %>%
filter(distribution == "normal",
duplicates != "0% duplicates",
!(parameter == "SD(1)" & decimals == "1 decimal")) %>%
select(n, parameter, duplicates, decimals, O:RMS) %>%
pivot_longer(cols = c(-n, -parameter, -duplicates, -decimals)) %>%
ggplot(aes(n, value, color = name)) +
geom_point(aes(shape = name)) +
geom_line() +
geom_hline(yintercept = 0.8,
linetype = 2) +
xlab(NULL) +
ylab(NULL) +
ggtitle("Power for truncated normal distributions") +
theme_minimal() +
facet_wrap(~duplicates + decimals + parameter,
nrow = 3) +
theme(strip.text.x = element_text(margin = margin(2, 0, 2, 0)),
plot.title = element_text(hjust = 0.5),
legend.position = "bottom",
legend.title = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_blank()
)
fig_2
ggsave(filename = "paper/figures_tables/McCormick_Figure_2.pdf",
plot = fig_2,
dpi = 800,
height = 10,
width = 7.5,
units = "in")
#Figure 3 ####
fig_3 <- u_n_e %>%
filter(distribution == "exponential",
duplicates != "0% duplicates") %>%
select(n, parameter, duplicates, decimals, O:RMS) %>%
pivot_longer(cols = c(-n, -parameter, -duplicates, -decimals)) %>%
ggplot(aes(n, value, color = name)) +
geom_point(aes(shape = name)) +
geom_line() +
geom_hline(yintercept = 0.8,
linetype = 2) +
xlab(NULL) +
ylab(NULL) +
ggtitle("Power for truncated exponential distributions") +
theme_minimal() +
facet_wrap(~duplicates + decimals + parameter,
nrow = 3) +
theme(strip.text.x = element_text(margin = margin(2, 0, 2, 0)),
plot.title = element_text(hjust = 0.5),
legend.position = "bottom",
legend.title = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_blank()
)
fig_3
ggsave(filename = "paper/figures_tables/McCormick_Figure_3.pdf",
plot = fig_3,
dpi = 800,
height = 10,
width = 7.5,
units = "in")
#Figure 4 ####
fig_4 <- u_n_e %>%
filter(distribution == "uniform",
duplicates != "0% duplicates") %>%
select(n, parameter, duplicates, decimals, O:RMS) %>%
pivot_longer(cols = c(-n, -parameter, -duplicates, -decimals)) %>%
ggplot(aes(n, value, color = name)) +
geom_point(aes(shape = name)) +
geom_line() +
geom_hline(yintercept = 0.8,
linetype = 2) +
xlab(NULL) +
ylab(NULL) +
ggtitle("Power for truncated uniform distributions") +
theme_minimal() +
facet_wrap(~duplicates + decimals + parameter,
nrow = 3) +
theme(strip.text.x = element_text(margin = margin(2, 0, 2, 0)),
plot.title = element_text(hjust = 0.5),
legend.position = "bottom",
legend.title = element_blank(),
panel.grid.major.x = element_blank(),
panel.grid.major.y = element_blank()
)
fig_4
ggsave(filename = "paper/figures_tables/McCormick_Figure_4.pdf",
plot = fig_4,
dpi = 800,
height = 10,
width = 7.5,
units = "in")
#Table 1 ####
Rows <- c(1, 2, "Total")
Zero <- c(0, 1, 1)
One <- c(2, 1, 3)
Two <- c(1, 0, 1)
Three <- c(2, 0, 2)
Four <- c(0, 1, 1)
Total <- c(5, 3, 8)
data.frame(Rows, Zero, One, Two, Three, Four, Total) %>%
gt() %>%
tab_header(
title = "Contingecy table for toy data set"
) %>%
tab_spanner(label = "Terminal Digit",
columns = c(Zero:Four)) %>%
cols_label(
Rows = "Preceding Digits",
Zero = "0",
One = "1",
Two = "2",
Three = "3",
Four = "4") %>%
gtsave("paper/figures_tables/McCormick_Table_1.rtf")
#Table 2 ####
a <- u_n_e %>%
filter(duplicates != "0% duplicates") %>%
select(O:RMS) %>%
summarise(across(everything(.), ~mean(.x))) %>%
mutate(Decimals = "All") %>%
select(Decimals, O:RMS)
b <- u_n_e %>%
filter(duplicates != "0% duplicates",
decimals == "1 decimal") %>%
select(O:RMS) %>%
summarise(across(everything(.), ~mean(.x))) %>%
mutate(Decimals = "One") %>%
select(Decimals, O:RMS)
c <- u_n_e %>%
filter(duplicates != "0% duplicates",
decimals == "2 decimals") %>%
select(O:RMS) %>%
summarise(across(everything(.), ~mean(.x))) %>%
mutate(Decimals = "Two") %>%
select(Decimals, O:RMS)
bind_rows(a, b, c) %>%
gt() %>%
tab_header(
title = "Average statistical power"
) %>%
fmt_number(
columns = 2:7,
decimals = 2
) %>% gtsave("paper/figures_tables/McCormick_Table_2.rtf")
devtools::test()
devtools::check()
library(indtermdigit)
check()
devtools::check()
devtools::test()
load_all()
devtools::load_all()
devtools::test()
library(indtermdigit)
load_all()
library(devtools)
load_all()
test()
# Generated by using Rcpp::compileAttributes() -> do not edit by hand
# Generator token: 10BE3573-1514-4C36-9D1C-5A225CD40393
dist_in <- function(distribution, set_n, set_mean, set_sd) {
.Call('_indtermdigit_dist_in', PACKAGE = 'indtermdigit', distribution, set_n, set_mean, set_sd)
}
data_in <- function(distribution, set_n, set_mean, set_sd, duplicates) {
.Call('_indtermdigit_data_in', PACKAGE = 'indtermdigit', distribution, set_n, set_mean, set_sd, duplicates)
}
violation <- function(sample_0, duplicates, type) {
.Call('_indtermdigit_violation', PACKAGE = 'indtermdigit', sample_0, duplicates, type)
}
perm_basic <- function(distribution, duplicates, set_n, set_mean, set_sd, decimals, reps, times, tolerance) {
.Call('_indtermdigit_perm_basic', PACKAGE = 'indtermdigit', distribution, duplicates, set_n, set_mean, set_sd, decimals, reps, times, tolerance)
}
perm_do <- function(sample_0, decimals, reps, tolerance) {
.Call('_indtermdigit_perm_do', PACKAGE = 'indtermdigit', sample_0, decimals, reps, tolerance)
}
average_fre <- function(x) {
.Call('_indtermdigit_average_fre', PACKAGE = 'indtermdigit', x)
}
average_fre2 <- function(x, n) {
.Call('_indtermdigit_average_fre2', PACKAGE = 'indtermdigit', x, n)
}
ft_stat <- function(new_n, vec_1_frac, vec_2_frac) {
.Call('_indtermdigit_ft_stat', PACKAGE = 'indtermdigit', new_n, vec_1_frac, vec_2_frac)
}
rms_stat <- function(new_n, vec_1_frac, vec_2_frac) {
.Call('_indtermdigit_rms_stat', PACKAGE = 'indtermdigit', new_n, vec_1_frac, vec_2_frac)
}
chisq_stat <- function(draws, vec_1_frac, vec_2_frac) {
.Call('_indtermdigit_chisq_stat', PACKAGE = 'indtermdigit', draws, vec_1_frac, vec_2_frac)
}
g2_stat <- function(draws, vec_1_frac, vec_2_frac) {
.Call('_indtermdigit_g2_stat', PACKAGE = 'indtermdigit', draws, vec_1_frac, vec_2_frac)
}
int_dec <- function(s, decimals) {
.Call('_indtermdigit_int_dec', PACKAGE = 'indtermdigit', s, decimals)
}
full_vec <- function(int_1, dec_1) {
.Call('_indtermdigit_full_vec', PACKAGE = 'indtermdigit', int_1, dec_1)
}
actual_frac <- function(int_full, dec, new_n) {
.Call('_indtermdigit_actual_frac', PACKAGE = 'indtermdigit', int_full, dec, new_n)
}
tab_it <- function(x, bins, a, b) {
.Call('_indtermdigit_tab_it', PACKAGE = 'indtermdigit', x, bins, a, b)
}
perm_vector <- function(v, r_sum, c_sum) {
.Call('_indtermdigit_perm_vector', PACKAGE = 'indtermdigit', v, r_sum, c_sum)
}
expected_cells <- function(r_frac, c_frac) {
.Call('_indtermdigit_expected_cells', PACKAGE = 'indtermdigit', r_frac, c_frac)
}
out_vector_cpp <- function(c_sums) {
.Call('_indtermdigit_out_vector_cpp', PACKAGE = 'indtermdigit', c_sums)
}
test()
library(indtermdigit)
#Setup####
knitr::opts_chunk$set(echo = FALSE)
options(dplyr.summarise.inform = FALSE)
devtools::load_all()
library(tidyverse)
library(gt)
exponential_all <- readRDS("paper/data/e_all.RDS") %>%
rename(n = number,
O = d_perm_p,
AF = d_av_fre_p,
X2 = d_chi_p,
G2 = d_g2_p,
FT = d_ft_p,
RMS = d_rms_p) %>%
mutate(distribution = "exponential",
parameter = ifelse(parameter == 1, "Exp(1)",
ifelse(parameter == 0.5, "Exp(0.5)", "Exp(0.25)")),
parameter = factor(parameter, levels = c("Exp(1)", "Exp(0.5)", "Exp(0.25)")),
duplicates = duplicates / n)
uniform_all <- readRDS("paper/data/u_all.RDS") %>%
rename(n = number,
O = d_perm_p,
AF = d_av_fre_p,
X2 = d_chi_p,
G2 = d_g2_p,
FT = d_ft_p,
RMS = d_rms_p) %>%
mutate(parameter = ifelse(parameter == 5, "U(0, 5)",
ifelse(parameter == 10, "U(0, 10)", "U(0, 20)")),
parameter = factor(parameter, levels = c("U(0, 5)", "U(0, 10)", "U(0, 20)")))
normal_all <- readRDS("paper/data/n_all.RDS") %>%
rename(n = number,
O = d_perm_p,
AF = d_av_fre_p,
X2 = d_chi_p,
G2 = d_g2_p,
FT = d_ft_p,
RMS = d_rms_p) %>%
mutate(parameter = ifelse(parameter == 1, "SD(1)",
ifelse(parameter == 2, "SD(2)", "SD(5)")),
parameter = factor(parameter, levels = c("SD(1)", "SD(2)", "SD(5)")))
u_n_e <- bind_rows(normal_all, uniform_all, exponential_all) %>%
mutate(duplicates = paste(duplicates * 100, "% duplicates", sep = ""),
duplicates = factor(duplicates, levels = c("0% duplicates", "5% duplicates", "10% duplicates", "20% duplicates")),
decimals = ifelse(decimals == 1, "1 decimal", "2 decimals"))
library(devtools)
test()
use_rcpp()
test()
load_all()
test()
check()
test()
load_all()
test()
check()
#' @useDynLib indtermdigit
#' @importFrom Rcpp sourceCpp
library(indtermdigit)
test()
devtools::test()
#' @useDynLib indtermdigit
#' @importFrom Rcpp sourceCpp
devtools::test()
use_R("roxygen")
usethis::use_R("roxygen")
usethis::use_r("roxygen")
load_all()
devtools::load_all()
devtools::test()
load_all()
library(devtools)
load_all()
test()
library(devtools)
document()
document()
document()
test()
